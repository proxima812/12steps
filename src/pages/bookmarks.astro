---
import PostCard from "@/components/PostCard.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";

import { getCollection } from "astro:content";

import type { IBookmark } from "@/types/global";
import Breadcrumbs from "@/components/Customs/Breadcrumbs.astro";
import { Icon } from "astro-icon/components";

const bookmarks = (Astro.cookies.get("bookmarks")?.json() || []) as IBookmark[];
const posts =
  (await getCollection(
    "posts",
    (item) => item && bookmarks.some((bookmark) => bookmark.id === item.id),
  )) || [];

export const prerender = false;

const customCrumbs = [
  {
    text: "–ì–ª–∞–≤–Ω–∞—è",
    href: "/",
  },
  {
    text: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã",
    href: "/materials",
  },
  {
    text: "–ò–∑–±—Ä–∞–Ω–Ω—ã–µ",
    href: "#",
  },
];
---

<BaseLayout title="–ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã">
  <Breadcrumbs crumbs={customCrumbs}>
    <Icon name="mdi:chevron-right" slot="separator" />
  </Breadcrumbs>
  {
    posts && posts.length > 0 ? (
      <>
        <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
          {posts.map((item) => {
            const isChecked = bookmarks.some(
              (bookmark) => bookmark.id === item.id,
            );
            return (
              <PostCard
                isChecked={isChecked}
                item={item}
                slug={item.slug}
                data={item.data}
              />
            );
          })}
        </div>
      </>
    ) : (
      <div class="flex flex-col items-center justify-center gap-6">
        <h2 class="text-2xl">–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤. ü§´</h2>
        <h2 class="text-2xl">
          <b>
            <u>–ò–ª–∏ –∂–µ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É! üôè</u>
          </b>
        </h2>
      </div>
    )
  }

  <script>
    import "../ts/bookmark";
    import "../ts/bookmark";
  </script>
</BaseLayout>
