---
// Пример компонента Breadcrumbs для Astro.js

import { getCollection } from "astro:content";

interface BreadcrumbItem {
  text: string;
  href: string;
}

const { indexText = "Домой", baseUrl = "/" } = Astro.props;

// Получаем данные из getCollections
const collections = await getCollection("posts");

// Формируем хлебные крошки на основе данных из collections
let parts: Array<BreadcrumbItem> = [
  {
    text: indexText,
    href: baseUrl,
  },
  {
    text: "Посты",
    href: `${baseUrl}posts/`,
  },
];

// Добавляем последний элемент из collections, если он существует
if (collections && collections.length > 0) {
  const lastItem = collections[collections.length - 1];
  if (lastItem && lastItem.data && lastItem.data.title) {
    parts.push({
      text: lastItem.data.title,
      href: `${baseUrl}posts/${lastItem.data.title}`, // Измените это в соответствии с вашей структурой URL
    });
  }
}
---

<!-- Разметка для компонента Breadcrumbs -->
<nav aria-label="breadcrumbs">
  <ol class="flex gap-2">
    {
      parts.map(({ text, href }, index, array) => (
        <li class="flex items-center gap-1">
          {index + 1 < array.length ? (
            <a href={href} class="font-medium text-blue-500">
              {text}
            </a>
          ) : ( 
            <span class="line-clamp-1 text-zinc-400">{text}</span>
          )}

          {index + 1 < array.length && (
            <svg
              aria-hidden="true"
              fill="none"
              focusable="false"
              height="1em"
              role="presentation"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1.5"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path d="m9 18 6-6-6-6" />
            </svg>
          )}
        </li>
      ))
    }
  </ol>
</nav>
