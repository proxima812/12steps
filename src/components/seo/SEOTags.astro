---
import { DEFAULT_TITLE } from "@/config/settings";
import Metricks from "../Metricks.astro";
interface Props {
  name?: string;
  title: string;
  type?: string;
  description: string;
  heroImage?: string;
  locale?: string;
  tags?: string;
  canonicalURL?: string;
  author?: string;
}
const {
  name,
  author,
  title,
  type,
  description,
  heroImage,
  locale = "ru",
  tags,
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
} = Astro.props;

/**
 * Enforce some standard canonical URL formatting across the site.
 */
function formatCanonicalURL(url: string | URL) {
  const path = url.toString();
  const hasQueryParams = path.includes("?");
  // If there are query params, make sure the URL has no trailing slash
  if (hasQueryParams) {
    path.replace(/\/?$/, "");
  }
  // otherwise, canonical URL always has a trailing slash
  return path.replace(/\/?$/, hasQueryParams ? "" : "/");
}

const themeColor = "#fff";
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <title>{title}</title>
  <meta name="generator" content={Astro.generator} />
  <meta name="theme-color" content={themeColor} />
  <link rel="mask-icon" href="/favicon.svg" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link
    rel="alternate"
    type="application/rss+xml"
    href="/rss.xml"
    title="RSS"
  />
  {
    canonicalURL && (
      <link rel="canonical" href={formatCanonicalURL(canonicalURL)} />
    )
  }
  <meta name="description" content={description} />
  <meta property="og:title" content={title} />
  <meta property="og:type" content={type ? "article" : "website"} />
  {
    canonicalURL && (
      <meta property="og:url" content={formatCanonicalURL(canonicalURL)} />
    )
  }
  <meta property="og:locale" content={locale} />
  <meta property="og:description" content={description} />
  <meta property="og:site_name" content={name ?? DEFAULT_TITLE} />
  {
    tags && tags.length > 0 && (
      // @ts-ignore
      <meta name="keywords" content={tags.join(", ")} />
    )
  }
  {heroImage && <meta property="og:image" content={heroImage} />}
  <Metricks />
</head>

